<ci:MyWindow xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ci="http://classisland.tech/schemas/xaml/core"
        xmlns:views="clr-namespace:ClassIsland.Views"
        xmlns:controls="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns:profile="clr-namespace:ClassIsland.Shared.Models.Profile;assembly=ClassIsland.Shared"
        xmlns:services="clr-namespace:ClassIsland.Core.Abstractions.Services;assembly=ClassIsland.Core"
        xmlns:converters="clr-namespace:ClassIsland.Converters"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ClassIsland.Views.ProfileSettingsWindow"
        Title="档案编辑"
        EnableMicaWindow="True"
        d:DataContext="{d:DesignInstance views:ProfileSettingsWindow}"
        Icon="/Assets/AppLogo.ico"
        MinWidth="750"
        Width="1100" Height="600"
        Closing="Window_OnClosing">
    <ci:MyWindow.DataTemplates>
    </ci:MyWindow.DataTemplates>
    <ci:MyWindow.Resources>
        <ci:CustomKeyDictionaryValueConverter x:TypeArguments="system:Guid, profile:Subject"
                                              x:Key="SubjectIdToSubjectConverter"/>
        <ci:CustomKeyDictionaryValueConverter x:TypeArguments="system:Guid, profile:ClassPlanGroup"
                                              x:Key="ClassPlanGroupIdToClassPlanGroupConverter"/>
        
        <ScrollViewer x:Key="ClassPlansInfoEditor" Width="332"
                      VerticalScrollBarVisibility="Auto">
            <StackPanel DataContext="{Binding ViewModel.SelectedClassPlan}"
                        Spacing="8"
                        Margin="16">
                <TextBlock Text="课程表信息" Theme="{StaticResource SubtitleTextBlockStyle}" />
                <controls:InfoBar Message="这是一个临时层课表，将在使用过后自动删除。" IsVisible="{Binding IsOverlay}"/>
                <ci:Field Label="名称">
                    <TextBox Text="{Binding Name}"/>
                </ci:Field>
                <ci:Field Label="时间表">
                    <ComboBox SelectedValue="{Binding TimeLayoutId}"
                              SelectedValueBinding="{Binding Key}"
                              ItemsSource="{Binding $parent[views:ProfileSettingsWindow].ViewModel.TimeLayouts.List}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Value.Name}"
                                           ToolTip.Tip="{Binding Key}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </ci:Field>
                <ci:Field Label="课表群">
                    <ComboBox SelectedValue="{Binding AssociatedGroup, Mode=TwoWay}"
                              SelectedValueBinding="{Binding Key}"
                              ItemsSource="{Binding $parent[views:ProfileSettingsWindow].ViewModel.ClassPlanGroups.List}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Value.Name}"
                                           ToolTip.Tip="{Binding Key}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </ci:Field>
                <CheckBox IsEnabled="{Binding IsOverlay, Converter={StaticResource InvertBooleanConverter}}" Margin="0 8 0 0" Content="自动启用" IsChecked="{Binding IsEnabled}"/>
                <TextBlock Text="临时层课表将忽略触发规则强制启用。" 
                           Margin="0 0 0 4"
                           IsVisible="{Binding IsOverlay}" TextWrapping="Wrap"/>
                <TextBlock Text="当课表设置为自动启用时，将会根据触发规则自动启用该课表。否则只能通过临时课表或临时层手动启用该课表。" 
                           IsVisible="{Binding IsOverlay, Converter={StaticResource InvertBooleanConverter}}"
                           TextWrapping="Wrap"/>

                <StackPanel IsEnabled="{Binding IsOverlay, Converter={StaticResource InvertBooleanConverter}}" 
                            IsVisible="{Binding IsEnabled}">
                    <ci:TimeRuleEditControl TimeRule="{Binding TimeRule, Mode=OneWay}"/>
                </StackPanel>
                <!-- 附加属性 -->
                <Separator Margin="0 16 0 8"/>
                <ci:IconText Glyph="&#xef2b;" Text="更多选项" Margin="0 0 0 8"/>
                <ItemsControl ItemsSource="{x:Static services:IAttachedSettingsHostService.ClassPlanSettingsAttachedSettingsControls}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ci:AttachedSettingsControlPresenter ControlInfo="{Binding}"
                                                               Margin="0 0 0 8"
                                                               ContentId="{Binding SelectedItem.Key, ElementName=ListViewClassPlans, Mode=OneWay}"
                                                               TargetObject="{Binding SelectedItem.Value, ElementName=ListViewClassPlans}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
        
        <Grid x:Key="ProfileManager" Margin="16" Width="300" RowDefinitions="Auto,*">
            <StackPanel Grid.Row="0" >
                <TextBlock Text="管理档案" Theme="{StaticResource SubtitleTextBlockStyle}"/>
                <TextBlock Text="管理与切换保存的档案。切换档案需要重新启动应用。" TextWrapping="Wrap"
                           Margin="0 6 0 0"/>
                <!--<TextBlock Text="{Binding MainViewModel.Settings.SelectedProfile, Mode=OneWay}"/>-->
                <WrapPanel Margin="0 6 0 0">
                    <Button ToolTip.Tip="新建档案。" Click="ButtonCreateProfile_OnClick"
                            Theme="{StaticResource TransparentButton}">
                        <ci:IconText Glyph="&#xE689;" Text="新建档案"/>
                    </Button>
                    <Button ToolTip.Tip="打开档案文件夹。" Click="ButtonOpenProfileFolder_OnClick"
                            Theme="{StaticResource TransparentButton}">
                        <ci:IconText Glyph="&#xE88D;" Text="打开文件夹"/>
                    </Button>
                    <Button ToolTip.Tip="重新加载档案列表。" Click="ButtonRefreshProfiles_OnClick"
                            Theme="{StaticResource TransparentButton}">
                        <ci:IconText Glyph="&#xE0B5;" Text="刷新"/>
                    </Button>
                </WrapPanel>
            </StackPanel>
            <ListBox Grid.Row="1" Margin="0 12 0 0"
                     SelectedValue="{Binding ViewModel.SelectedProfile, Mode=TwoWay}"
                     SelectionMode="Single"
                     ItemsSource="{Binding ViewModel.Profiles, Mode=OneWay}">
                <ListBox.Styles>
                    <Style Selector="ListBoxItem">
                        <Setter Property="ContextFlyout">
                            <MenuFlyout>
                                <MenuItem Icon="{ci:FluentIcon &#xEE7D;}" Header="重命名" Click="MenuItemRenameProfile_OnClick"/>
                                <MenuItem Icon="{ci:FluentIcon &#xE58B;}" Header="复制" Click="MenuItemProfileDuplicate_OnClick"/>
                                <!--<MenuItem Icon="{materialDesign:PackIcon FileExportOutline}" Header="导出"/>-->
                                <MenuItem Icon="{ci:FluentIcon &#xE61D;}" Header="删除" Click="MenuItemDeleteProfile_OnClick"/>
                            </MenuFlyout>
                        </Setter>
                    </Style>
                </ListBox.Styles>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Background="Transparent">
                            <StackPanel.Resources>
                                <ci:StringToRadioButtonSelectionConverter x:Key="StringToRadioButtonSelectionConverter" />
                            </StackPanel.Resources>
                            <RadioButton GroupName="ProfileSelection" VerticalAlignment="Center"
                                         Command="{Binding $parent[views:ProfileSettingsWindow].ProfileSelectionRadioButtonToggledCommand}"
                                         CommandParameter="{Binding}">
                                <RadioButton.IsChecked>
                                    <MultiBinding Converter="{StaticResource StringToRadioButtonSelectionConverter}">
                                        <Binding Path="ViewModel.SettingsService.Settings.SelectedProfile" 
                                                 RelativeSource="{RelativeSource FindAncestor, AncestorType=views:ProfileSettingsWindow}"/>
                                        <Binding Mode="OneWay"/>
                                    </MultiBinding>
                                </RadioButton.IsChecked>
                            </RadioButton>
                            <TextBlock Text="{Binding}" VerticalAlignment="Center" Margin="0 0 0 0"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <converters:SubjectDictionaryKeyFinderMultiConverter x:Key="SubjectDictionaryKeyFinderMultiConverter" />
    </ci:MyWindow.Resources>
    <SplitView DisplayMode="Overlay" PanePlacement="Right"
               IsPaneOpen="{Binding ViewModel.IsDrawerOpen, Mode=TwoWay}"
               Pane="{Binding ViewModel.DrawerContent, Mode=OneWay}">
        <Grid RowDefinitions="48, *">
            <!-- Background Layer -->
            <Border Grid.Row="1" Background="{DynamicResource LayerOnMicaBaseAltFillColorDefaultBrush}"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch" />

            <TabControl Grid.Row="0" Grid.RowSpan="2" Padding="0" Classes="navigation"
                        SelectedIndex="{Binding ViewModel.MasterPageTabSelectIndex}">
                <TabItem Header="课表">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" MinWidth="300" MaxWidth="500" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
                        <!-- 课表选择区域 -->
                        <Grid Grid.Column="0" RowDefinitions="Auto, *">
                            <controls:CommandBar Grid.Row="0"
                                                 DefaultLabelPosition="Right">
                                <controls:CommandBar.PrimaryCommands>
                                    <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xe00d;}"
                                                               Label="添加" ToolTip.Tip="新建一个课表。"
                                                               Click="ButtonAddClassPlan_OnClick"/>
                                    <controls:CommandBarSeparator />
                                    <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xe58d;}" 
                                                               Label="复制" ToolTip.Tip="复制一个当前选中的课表的副本。"
                                                               Click="ButtonDuplicateClassPlan_OnClick"/>
                                </controls:CommandBar.PrimaryCommands>
                            </controls:CommandBar>
                            <ListBox Grid.Row="1" ItemsSource="{Binding ViewModel.ClassPlans.List, Mode=OneWay}"
                                     SelectedValue="{Binding ViewModel.SelectedClassPlan}"
                                     SelectedValueBinding="{Binding Value}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <WrapPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Value.Name}" Classes="textFix" />
                                        </WrapPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                        <GridSplitter Grid.Column="1" Margin="2 0" />
                        <!-- 课表编辑区域 -->
                        
                        <ci:Emptiable Grid.Column="2" Data="{Binding ViewModel.SelectedClassPlan}"
                                      IsDirectContentMode="True">
                            <Grid Grid.Column="2" RowDefinitions="Auto,*,Auto">
                                <controls:CommandBar Grid.Row="0" DefaultLabelPosition="Right">
                                    <controls:CommandBar.Styles>
                                        <Style Selector="controls|CommandBarButton:labelright /template/ controls|FontIcon#SubItemChevron">
                                            <Setter Property="IsVisible" Value="False"/>
                                        </Style>
                                    </controls:CommandBar.Styles>
                                    <controls:CommandBar.PrimaryCommands>
                                        <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xe9e4;}"
                                                                   Label="详细信息"
                                                                   Click="ButtonOpenClassPlanDetails_OnClick"
                                                                   ToolTip.Tip="查看并编辑课表的基本信息。" />
                                        <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xe077;}"
                                                                   Label="详细看板"
                                                                   ToolTip.Tip="查看课表的所有时间点的附加设置继承情况。" />
                                        <controls:CommandBarSeparator />
                                        <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xea2f;}"
                                                                   Label="创建临时层"
                                                                   ToolTip.Tip="创建临时课表层。"
                                                                   Click="ButtonOpenCreateOverlayClassPlanFlyout_OnClick"
                                                                   IsEnabled="{Binding ViewModel.SelectedClassPlan.IsOverlay, Converter={StaticResource BooleanToBooleanReConverter}}">
                                            <controls:CommandBarButton.Flyout>
                                                <Flyout>
                                                    <StackPanel Spacing="12" Width="250">
                                                        <TextBlock Text="创建临时层" FontWeight="Bold" />
                                                        <ci:Field Label="时间表">
                                                            <ComboBox
                                                                HorizontalAlignment="Stretch"
                                                                ItemsSource="{Binding ViewModel.TimeLayouts.List}"
                                                                SelectedValueBinding="{Binding Key}"
                                                                SelectedValue="{Binding ViewModel.TempOverlayClassPlanTimeLayoutId}">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Value.Name}" />
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </ci:Field>
                                                        <ci:Field Label="启用日期">
                                                            <CalendarDatePicker
                                                                HorizontalAlignment="Stretch"
                                                                SelectedDate="{Binding ViewModel.OverlayEnableDateTime}" />
                                                        </ci:Field>
                                                        <Button HorizontalAlignment="Right"
                                                                Click="ButtonCreateTempOverlayClassPlan_OnClick"
                                                                Classes="accent">
                                                            <ci:IconText Symbol="Checkmark" UseFontIcon="False" Text="创建" />
                                                        </Button>
                                                    </StackPanel>
                                                </Flyout>
                                            </controls:CommandBarButton.Flyout>
                                        </controls:CommandBarButton>
                                        <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xe61d;}"
                                                                   Label="删除"
                                                                   ToolTip.Tip="删除该课表。">
                                            <controls:CommandBarButton.Flyout>
                                                <Flyout>
                                                    <StackPanel Spacing="8">
                                                        <TextBlock FontWeight="Bold">
                                                            <Run Text="要删除课表" />
                                                            <Run Text="{Binding ViewModel.SelectedClassPlan.Name}" />
                                                            <Run Text="吗？" />
                                                        </TextBlock>
                                                        <TextBlock Text="此操作无法撤销。" />
                                                        <Button Content="删除" Classes="accent" Click="ButtonDeleteSelectedClassPlan_OnClick"/>
                                                    </StackPanel>
                                                </Flyout>
                                            </controls:CommandBarButton.Flyout>
                                        </controls:CommandBarButton>
                                    </controls:CommandBar.PrimaryCommands>

                                </controls:CommandBar>

                                <!-- 课表编辑 -->
                                <Grid Grid.Row="1"
                                      RowDefinitions="Auto,*"
                                      DataContext="{Binding ViewModel.SelectedClassPlan}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="5" />
                                        <ColumnDefinition Width="350" MinWidth="300" MaxWidth="450" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Warnings -->
                                    <!-- TODO: 实现 Warnings 显示 -->
                                    <StackPanel Grid.Row="0" Grid.Column="0">
                                        <StackPanel.Styles>
                                            <Style Selector="StackPanel">
                                                <Style Selector="^ controls|InfoBar#InfoBarNoTimeLayoutWarning">
                                                    <Setter Property="IsVisible" Value="False"/>
                                                </Style>
                                                <Style Selector="^ controls|InfoBar#InfoBarEmptyTimeLayoutIdWarning">
                                                    <Setter Property="IsVisible" Value="{Binding TimeLayout, Converter={x:Static ObjectConverters.IsNull}}"/>
                                                </Style>
                                            </Style>
                                            <Style Selector="StackPanel.no-timeLayouts">
                                                <Style Selector="^ controls|InfoBar#InfoBarNoTimeLayoutWarning">
                                                    <Setter Property="IsVisible" Value="True"/>
                                                </Style>
                                                <Style Selector="^ controls|InfoBar#InfoBarEmptyTimeLayoutIdWarning">
                                                    <Setter Property="IsVisible" Value="False"/>
                                                </Style>
                                            </Style>
                                        </StackPanel.Styles>
                                        <Interaction.Behaviors>
                                            <DataTriggerBehavior Binding="{Binding $parent[views:ProfileSettingsWindow].ViewModel.ProfileService.Profile.TimeLayouts.Count}"
                                                                 Value="0">
                                                <AddClassAction ClassName="no-timeLayouts"/>
                                            </DataTriggerBehavior>
                                            <DataTriggerBehavior Binding="{Binding $parent[views:ProfileSettingsWindow].ViewModel.ProfileService.Profile.TimeLayouts.Count}"
                                                                 Value="0"
                                                                 ComparisonCondition="NotEqual">
                                                <RemoveClassAction ClassName="no-timeLayouts"/>
                                            </DataTriggerBehavior>
                                        </Interaction.Behaviors>
                                        <controls:InfoBar Message="在设置课表之前，您需要在【时间表】页面中根据学校的作息安排编排时间表。"
                                                          Severity="Warning"
                                                          IsOpen="True"
                                                          IsClosable="False"
                                                          x:Name="InfoBarNoTimeLayoutWarning">
                                            <controls:InfoBar.ActionButton>
                                                <Button Content="前往编排时间表" Click="ButtonGoToTimeLayoutsPage_OnClick"/>
                                            </controls:InfoBar.ActionButton>
                                        </controls:InfoBar>
                                        <controls:InfoBar Message="您还没有为此课表设置时间表。在编排课程之前，您需要在【课表信息】中为本课表设置一个时间表。"
                                                          Severity="Warning"
                                                          IsOpen="True"
                                                          IsClosable="False"
                                                          x:Name="InfoBarEmptyTimeLayoutIdWarning">
                                            <controls:InfoBar.ActionButton>
                                                <Button Content="前往设置时间表" Click="ButtonOpenClassPlanDetails_OnClick"/>
                                            </controls:InfoBar.ActionButton>
                                        </controls:InfoBar>
                                    </StackPanel>

                                    <DataGrid Grid.Column="0" Grid.Row="1"
                                              Margin="0 0 4 0"
                                              AutoGenerateColumns="False"
                                              ItemsSource="{Binding Classes}"
                                              CanUserSortColumns="False"
                                              RowHeaderWidth="150"
                                              x:Name="DataGridClassPlans"
                                              GridLinesVisibility="Horizontal"
                                              SelectedIndex="{Binding ViewModel.SelectedClassIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=views:ProfileSettingsWindow}, Mode=TwoWay}"
                                              SelectedItem="{Binding ViewModel.SelectedClassInfo, RelativeSource={RelativeSource FindAncestor, AncestorType=views:ProfileSettingsWindow}}">
                                        <DataGrid.Columns>
                                            <DataGridCheckBoxColumn Header="启用"
                                                                    Binding="{Binding IsEnabled}" />
                                            <DataGridTemplateColumn Header="时间" IsReadOnly="True">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock VerticalAlignment="Center"
                                                                   FontSize="13"
                                                                   Margin="6 0">
                                                            <Run
                                                                Text="{Binding CurrentTimeLayoutItem.StartSecond, StringFormat={}{0:HH:mm:ss}, Mode=OneWay}" />
                                                            <Run Text="-" />
                                                            <Run
                                                                Text="{Binding CurrentTimeLayoutItem.EndSecond, StringFormat={}{0:HH:mm:ss}, Mode=OneWay}" />
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Header="科目">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.Styles>
                                                                <Style Selector="ComboBox /template/ Border#Background">
                                                                    <Setter Property="IsVisible" Value="False" />
                                                                </Style>
                                                            </Grid.Styles>
                                                            <ComboBox
                                                                ItemsSource="{Binding $parent[views:ProfileSettingsWindow].ViewModel.Subjects.List}"
                                                                SelectedValue="{Binding SubjectId}"
                                                                HorizontalAlignment="Stretch"
                                                                SelectedValueBinding="{Binding Key}"
                                                                FontSize="13">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Value.Name}"
                                                                            Margin="0 4 0 0" />
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>

                                    <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch"
                                                  Grid.Row="0" Grid.RowSpan="2"
                                                  VerticalAlignment="Stretch" />

                                    <TabControl Grid.Row="0" Grid.Column="2" Classes="compact"
                                                Grid.RowSpan="2"
                                                Padding="0">
                                        <TabItem Header="编辑科目">
                                            <ListBox
                                                ItemsSource="{Binding $parent[views:ProfileSettingsWindow].ViewModel.Subjects.List}">
                                                <ListBox.Styles>
                                                    <Style Selector="ListBoxItem">
                                                        <Setter Property="MinWidth" Value="0"></Setter>
                                                    </Style>
                                                </ListBox.Styles>
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Value.Initial}"
                                                                   ToolTip.Tip="{Binding Value.Name}"
                                                                   FontSize="16"
                                                                   Margin="-4 0 -2 -4" />
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </TabItem>
                                    </TabControl>
                                </Grid>
                            </Grid>
                        </ci:Emptiable>
                    </Grid>
                </TabItem>
                <TabItem Header="时间表">

                </TabItem>
                <TabItem Header="科目">
                    <Grid RowDefinitions="Auto,*">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="450" MaxWidth="500" MinWidth="200"/>
                        </Grid.ColumnDefinitions>
                        <!-- 科目操作 -->
                        <controls:CommandBar Grid.Column="0" Grid.ColumnSpan="3"
                                 Grid.Row="0" DefaultLabelPosition="Right"
                                 IsEnabled="{Binding ViewModel.ManagementService.Policy.DisableProfileSubjectsEditing, Converter={StaticResource BooleanToBooleanReConverter}}">
                            <controls:CommandBar.PrimaryCommands>
                                <controls:CommandBarButton Click="ButtonAddSubject_OnClick" ToolTip.Tip="新建一个科目。"
                                                           IconSource="{ci:FluentIconSource &#xE00D;}" Label="添加"/>
                                <controls:CommandBarSeparator/>
                                <controls:CommandBarButton Click="ButtonDuplicateSubject_OnClick" ToolTip.Tip="复制选中的科目。"
                                                           IsEnabled="{Binding ViewModel.SelectedSubject, Converter={x:Static ObjectConverters.IsNotNull}}"
                                                           IconSource="{ci:FluentIconSource &#xE58D;}" Label="复制"/>
                                <controls:CommandBarButton Click="ButtonDeleteSubject_OnClick" ToolTip.Tip="删除选中的科目。"
                                                           IsEnabled="{Binding ViewModel.SelectedSubject, Converter={x:Static ObjectConverters.IsNotNull}}"
                                                           IconSource="{ci:FluentIconSource &#xE61D;}" Label="删除"/>
                            </controls:CommandBar.PrimaryCommands>
                        </controls:CommandBar>
                        <!-- 科目选择 -->
                        <Grid Grid.Row="1" Grid.Column="0" Margin="0 0 3 0">
                            <!-- 科目 -->
                            <DataGrid Grid.Row="0"
                                      x:Name="DataGridSubjects"
                                      ItemsSource="{Binding ViewModel.ProfileService.Profile.EditingSubjects, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      AutoGenerateColumns="False"
                                      IsReadOnly="{Binding ViewModel.ManagementService.Policy.DisableProfileSubjectsEditing}"
                                      SelectedItem="{Binding ViewModel.SelectedSubject}"
                                      GridLinesVisibility="All"
                                      CanUserSortColumns="False"
                                      FontSize="13">
                                <DataGrid.Styles>
                                    <Style Selector="DataGridRow TextBlock, DataGridRow TextBox">
                                        <Setter Property="TextElement.FontSize" Value="13"/>
                                    </Style>
                                </DataGrid.Styles>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="" IsReadOnly="True"
                                                            Width="50">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <ci:FluentIcon>
                                                        <Interaction.Behaviors>
                                                            <DataTriggerBehavior Binding="{Binding IsOutDoor}" Value="True">
                                                                <AddClassAction ClassName="out-door"/>
                                                            </DataTriggerBehavior>
                                                            <DataTriggerBehavior Binding="{Binding IsOutDoor}" Value="False">
                                                                <RemoveClassAction ClassName="out-door"/>
                                                            </DataTriggerBehavior>
                                                        </Interaction.Behaviors>
                                                        <ci:FluentIcon.Styles>
                                                            <Style Selector="ci|FluentIcon">
                                                                <Setter Property="Glyph" Value="&#xE47A;"/>
                                                                <Style Selector="^.out-door">
                                                                    <Setter Property="Glyph" Value="&#xF02B;"/>                                                     
                                                                </Style>
                                                            </Style>
                                                        </ci:FluentIcon.Styles>
                                                    </ci:FluentIcon>
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay}"
                                                        Header="科目名"/>
                                    <DataGridTextColumn Binding="{Binding Initial, Mode=TwoWay}"
                                                            Header="简称"/>
                                    <DataGridCheckBoxColumn Binding="{Binding IsOutDoor, Mode=TwoWay}"
                                                                Header="户外课程？"/>
                                    <DataGridTextColumn Binding="{Binding TeacherName, Mode=TwoWay}"
                                                            Header="科任老师"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>

                        <!-- Gutter -->
                        <GridSplitter Grid.Row="1"
                                      Grid.Column="1"
                                      MaxWidth="500"
                                      Width="5" HorizontalAlignment="Stretch"/>

                        <!-- 科目编辑 -->
                        <ci:Emptiable Grid.Row="1" Grid.Column="2" 
                                      IsDirectContentMode="True"
                                      Data="{Binding ViewModel.SelectedSubject}">
                            <Grid Margin="3 0 0 0"
                                  DataContext="{Binding ViewModel.SelectedSubject}" RowDefinitions="Auto,*">
                                <!-- 科目编辑 -->
                                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                    <StackPanel Spacing="6" Margin="8"
                                                IsEnabled="{Binding ViewModel.ManagementService.Policy.DisableProfileSubjectsEditing, Converter={StaticResource InvertBooleanConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=views:ProfileSettingsWindow}}">
                                        <TextBlock Text="编辑科目信息"
                                                   Theme="{StaticResource SubtitleTextBlockStyle}"/>
                                        <!-- 科目名 & 简称 -->
                                        <Grid ColumnDefinitions="*,*">
                                            <!-- 科目名 -->
                                            <ci:Field Grid.Column="0" Label="科目名" Margin="0 0 2 0">
                                                <TextBox x:Name="TextBoxSubjectName"
                                                         Text="{Binding Name}" />
                                            </ci:Field>
                                            <!-- 简称 -->
                                            <ci:Field Grid.Column="1" Label="简称" Margin="2 0 0 0">
                                                <TextBox Text="{Binding Initial}" />
                                            </ci:Field>
                                        </Grid>
                                        <!-- 科任老师 -->
                                        <ci:Field Label="科任老师">
                                            <TextBox Text="{Binding TeacherName}" />
                                        </ci:Field>
                                        <!-- 户外课程 -->
                                        <CheckBox Margin="0 6 0 0"
                                                  IsChecked="{Binding IsOutDoor}"
                                                  Content="该科目是户外课程" />
                                        <!-- 附加属性 -->
                                        <Separator Margin="0 20 0 8" />
                                        <ci:IconText Glyph="&#xEF2B;" Text="更多选项" Margin="0 0 0 8" />
                                        <ItemsControl
                                            ItemsSource="{x:Static services:IAttachedSettingsHostService.SubjectSettingsAttachedSettingsControls}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <ci:AttachedSettingsControlPresenter ControlInfo="{Binding}"
                                                        Margin="0 0 0 8"
                                                        TargetObject="{Binding ViewModel.SelectedSubject, RelativeSource={RelativeSource FindAncestor, AncestorType=views:ProfileSettingsWindow}}">
                                                        <ci:AttachedSettingsControlPresenter.ContentId>
                                                            <MultiBinding
                                                                Converter="{StaticResource SubjectDictionaryKeyFinderMultiConverter}"
                                                                Mode="OneWay">
                                                                <Binding Path="SelectedItem"
                                                                         ElementName="DataGridSubjects" />
                                                                <Binding
                                                                    Path="ViewModel.ProfileService.Profile.Subjects"
                                                                    RelativeSource="{RelativeSource FindAncestor, AncestorType=views:ProfileSettingsWindow}" />
                                                            </MultiBinding>
                                                        </ci:AttachedSettingsControlPresenter.ContentId>
                                                    </ci:AttachedSettingsControlPresenter>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </ci:Emptiable>

                    </Grid>
                </TabItem>
                <TabItem Header="调课">

                </TabItem>
            </TabControl>

            <!-- 信息栏 -->
            <controls:CommandBar Grid.Row="0" HorizontalAlignment="Right" DefaultLabelPosition="Right">
                <controls:CommandBar.SecondaryCommands>
                    
                </controls:CommandBar.SecondaryCommands>
                <controls:CommandBar.PrimaryCommands>
                    <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xe699;}"
                                               Label="{Binding ViewModel.ProfileService.CurrentProfilePath}"
                                               ToolTip.Tip="当前启用的档案"
                                               Click="ButtonOpenProfileManager_OnClick"/>
                    <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xe6b1;}"
                                               Label="{Binding ViewModel.LessonsService.CurrentClassPlan.Name}"
                                               ToolTip.Tip="启用临时课表"/>
                    <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xe92f;}"
                                               ToolTip.Tip="管理课表群">
                        <Border>
                            <Border.DataContext>
                                <MultiBinding Converter="{StaticResource ClassPlanGroupIdToClassPlanGroupConverter}">
                                    <Binding Path="ViewModel.ProfileService.Profile.SelectedClassPlanGroupId"/>
                                    <Binding Path="ViewModel.ProfileService.Profile.ClassPlanGroups"/>
                                </MultiBinding>
                            </Border.DataContext>
                            <TextBlock Text="{Binding Name}"/>
                        </Border>
                    </controls:CommandBarButton>
                    <controls:CommandBarSeparator/>
                    <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xeeb5;}"
                                               Label="保存"
                                               Click="ButtonSaveProfile_OnClick"
                                               ToolTip.Tip="保存当前档案文件。"/>
                    <controls:CommandBarButton IconSource="{ci:FluentIconSource &#xee2f;}"
                                               Label="帮助"
                                               ToolTip.Tip="查看档案编辑器帮助"/>
                </controls:CommandBar.PrimaryCommands>
            </controls:CommandBar>
        </Grid>
    </SplitView>
</ci:MyWindow>
