<Window x:Class="ClassIsland.MainWindow"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClassIsland"
        mc:Ignorable="d"
        Title="ClassIsland" 
        Height="40" 
        Width="800"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="clr-namespace:ClassIsland.Controls"
        xmlns:converters="clr-namespace:ClassIsland.Converters"
        xmlns:models="clr-namespace:ClassIsland.Models"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:profile="clr-namespace:ClassIsland.Shared.Models.Profile;assembly=ClassIsland.Shared"
        xmlns:converters1="clr-namespace:ClassIsland.Core.Converters;assembly=ClassIsland.Core"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:ci="http://classisland.tech/schemas/xaml/core"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="{Binding ViewModel.Settings.MainWindowFontWeight2, Converter={StaticResource IntToFontWeightConverter}}"
        TextElement.FontSize="14"
        d:DataContext="{d:DesignInstance local:MainWindow}"
        FontFamily="{Binding ViewModel.Settings.MainWindowFont, Mode=OneWay}"
        SystemDecorations="None"
        ShowInTaskbar="False"
        d:Width="600"
        Closing="MainWindow_OnClosing"
        SizeChanged="MainWindow_OnSizeChanged"
        Activated="MainWindow_OnActivated"
        Icon="/Assets/AppLogo.ico"
        Loaded="MainWindow_OnLoaded"
        SizeToContent="Height"
        ShowActivated="False"
        x:Name="MainWindow">
    <Window.Resources>
        <converters1:IndexConverter x:Key="IndexConverter" />
        <converters1:ColorToColorPickerBrushConverter x:Key="ColorToColorPickerBrushConverter"/>
        <profile:ClassPlan x:Key="FallbackClassPlan"/>
    </Window.Resources>
    <Window.Styles>
        <Style Selector="Grid#GridRoot">
            <Style Selector="^.ExplicitShowed.OverlayOpened">
                <Setter Property="IsVisible" Value="{Binding SettingsService.Settings.IsMainWindowVisible}"/>
            </Style>
            <Style Selector="^.BasicHidingMode:not(.ExplicitShowed)">
                <Style Selector="^.HideOnClass.StateOnClass">
                    <Setter Property="IsVisible" Value="False"/>
                </Style>
                <Style Selector="^.HideOnMaxWindow.ForegroundMaxWindow">
                    <Setter Property="IsVisible" Value="False"/>
                </Style>
                <Style Selector="^.HideOnFullscreen.ForegroundFullscreen">
                    <Setter Property="IsVisible" Value="False"/>
                </Style>
            </Style>
            <Style Selector="^.AdvancedHidingMode.HideRuleSatisfied:not(.ExplicitShowed)">
                <Setter Property="IsVisible" Value="False"/>
            </Style>
            <Setter Property="IsVisible" Value="{Binding ViewModel.Settings.IsMainWindowVisible}" />
        </Style>
    </Window.Styles>
    <!-- <Window.Style> -->
    <!--     <Style TargetType="Window"> -->
    <!--         <Style.Triggers> -->
    <!--             ~1~ Debug @1@ -->
    <!--             <DataTrigger Binding="{Binding ViewModel.Settings.IsMainWindowDebugEnabled, Mode=OneWay}" Value="True"> -->
    <!--                 <Setter Property="Background" Value="#2FAA0000"/> -->
    <!--             </DataTrigger> -->
    <!--         </Style.Triggers> -->
    <!--         ~1~ 默认状态 @1@ -->
    <!--         <Setter Property="Topmost" Value="False"/> -->
    <!--         <Setter Property="Background" Value="{x:Null}"/> -->
    <!--     </Style> -->
    <!-- </Window.Style> -->
    <Grid>
        <!-- ROOT -->
        <LayoutTransformControl>
            <LayoutTransformControl.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="{Binding ViewModel.Settings.Scale, Mode=OneWay}"
                                    ScaleY="{Binding ViewModel.Settings.Scale, Mode=OneWay}" />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </LayoutTransformControl.LayoutTransform>
            <Grid ClipToBounds="True"
                  IsHitTestVisible="{Binding ViewModel.Settings.IsMouseClickingEnabled, Mode=OneWay}"
                  VerticalAlignment="Top"
                  HorizontalAlignment="Stretch"
                  x:Name="GridRoot"
                  RenderTransformOrigin="0,0"
                  
                  Classes.ExplicitShowed="{Binding ViewModel.IsNotificationWindowExplicitShowed, Mode=OneWay}"
                  Classes.OverlayOpened="{Binding ViewModel.IsOverlayOpened, Mode=OneWay}"
                  Classes.HideOnClass="{Binding ViewModel.Settings.HideOnClass, Mode=OneWay}"
                  Classes.HideOnMaxWindow="{Binding ViewModel.Settings.HideOnMaxWindow, Mode=OneWay}"
                  Classes.HideOnFullscreen="{Binding ViewModel.Settings.HideOnFullscreen, Mode=OneWay}"
                  Classes.ForegroundMaxWindow="{Binding ViewModel.IsForegroundMaxWindow, Mode=OneWay}"
                  Classes.ForegroundFullscreen="{Binding ViewModel.IsForegroundFullscreen, Mode=OneWay}"
                  Classes.HideRuleSatisfied="{Binding ViewModel.IsHideRuleSatisfied, Mode=OneWay}">
                <Interaction.Behaviors>
                    <DataTriggerBehavior Binding="{Binding ViewModel.Settings.HideMode, Mode=OneWay}" Value="0">
                        <AddClassAction ClassName="BasicHidingMode"/>
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{Binding ViewModel.Settings.HideMode, Mode=OneWay}" Value="1">
                        <AddClassAction ClassName="AdvancedHidingMode"/>
                    </DataTriggerBehavior>
                    <DataTriggerBehavior Binding="{Binding LessonsService.CurrentState, Mode=OneWay}" Value="OnClass">
                        <AddClassAction ClassName="StateOnClass"/>
                    </DataTriggerBehavior>
                </Interaction.Behaviors>
                <Grid.Effect>
                    <DropShadowEffect BlurRadius="8" Opacity="0" 
                                      x:Name="RootDropShadowEffect"
                                      Color="Black"/>
                </Grid.Effect>

                <Border ClipToBounds="True"
                        x:Name="ResourceLoaderBorder"
                        TextElement.FontSize="{DynamicResource MainWindowBodyFontSize}">
                    <Border.Resources>

                    </Border.Resources>
                    <Grid>
                        <ItemsControl Grid.Column="0"
                                      ItemsSource="{Binding Source={StaticResource ComponentsCollectionViewSource}}">
                            <ItemsControl.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.Panel>
                                        <ItemsPanelTemplate>
                                            <StackPanel IsItemsHost="True"/>
                                        </ItemsPanelTemplate>
                                    </GroupStyle.Panel>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                                        <controls:MainWindowLine WindowDockingLocation="{Binding ViewModel.Settings.WindowDockingLocation, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                                            LastStoryboardName="{Binding ViewModel.LastStoryboardName, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                                            IsMainLine="{Binding Converter={StaticResource MainWindowIsMainLineConverter}, ConverterParameter={StaticResource ComponentsCollectionViewSource}}"
                                                            LineNumber="{Binding Name}"
                                                            IsOverlayOpen="{Binding ViewModel.IsOverlayOpened, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                                                            <ItemsPresenter/>
                                                        </controls:MainWindowLine>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </ItemsControl.GroupStyle>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ci:ComponentPresenter IsOnMainWindow="True" 
                                                               IsRootComponent="True"
                                                               Settings="{Binding}"
                                                               HidingRules="{Binding HidingRules, Mode=OneWay}"
                                                               HideOnRule="{Binding HideOnRule, Mode=OneWay}"
                                                               Margin="6 0" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>

                </Border>

                <!--<hc:NotifyIcon ContextMenu="{StaticResource AppContextMenu}" Text="ClassIsland" Icon="/Assets/AppLogo.ico"/>-->
                <!--<tb:TaskbarIcon ContextMenu="{StaticResource AppConteGriddu}"
                        DataContext="{Binding}"
                        x:Name="MyTaskBarIcon"
                        IconSource="/Assets/AppLogo.ico"
                        MenuActivation="LeftOrRightClick"
                        ToolTipText="ClassIsland"
                        ToolTip.Tip="ClassIsland">
            </tb:TaskbarIcon>-->

                <!-- Content -->

            </Grid>
        </LayoutTransformControl>

        <!-- Scale debug -->
        <TextBlock Foreground="Cyan" 
                   d:Visibility="Collapsed"
                   IsVisible="{Binding ViewModel.Settings.IsMainWindowDebugEnabled}">
            <Run Text="GridRoot:"/>
            <Run Text="{Binding ActualWidth, ElementName=GridRoot, Mode=OneWay, StringFormat={}{0:f1}}"/>
            <Run Text="{Binding ActualHeight, ElementName=GridRoot, Mode=OneWay, StringFormat={}{0:f1}}"/>
            <LineBreak/>
            <Run Text="CurrentTime:"/>
            <Run Text="{Binding ViewModel.DebugCurrentTime, ConverterCulture=zh-CN}"/>
        </TextBlock>
        <TextBlock Foreground="Cyan" 
                   HorizontalAlignment="Right"
                   d:Visibility="Collapsed"
                   IsVisible="{Binding ViewModel.Settings.IsMainWindowDebugEnabled}">
            <Run Text="{x:Static local:App.AppVersionLong}"/>
        </TextBlock>

        <!-- Reserved transforms -->
        <Grid.RenderTransform>
            <TransformGroup>
                <TranslateTransform/>
                <ScaleTransform/>
                <RotateTransform/>
                <MatrixTransform/>
            </TransformGroup>
        </Grid.RenderTransform>
    </Grid>
</Window>
