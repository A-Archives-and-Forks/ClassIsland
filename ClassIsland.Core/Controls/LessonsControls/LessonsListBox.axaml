<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lessonsControls="clr-namespace:ClassIsland.Core.Controls.LessonsControls"
                    xmlns:profile="clr-namespace:ClassIsland.Shared.Models.Profile;assembly=ClassIsland.Shared"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:ci="http://classisland.tech/schemas/xaml/core">

    <ControlTheme TargetType="{x:Type lessonsControls:LessonsListBox}"
           x:Key="ClassIsland.LessonsListBox">
        <ControlTheme.Resources>
            <lessonsControls:ClassInfoMultiConverter x:Key="ClassInfoMultiConverter"/>

            <DataTemplate DataType="{x:Type profile:TimeLayoutItem}"
                          x:Key="{x:Static lessonsControls:LessonsListBox.SeparatorLessonControlResourceKey}">
                <ci:LessonControlSeparator LessonControlSettings="{Binding $parent[lessonsControls:LessonsListBox].LessonControlSettings, Mode=OneWay}"/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type profile:TimeLayoutItem}"
                          x:Key="{x:Static lessonsControls:LessonsListBox.ExpandedLessonControlResourceKey}">
                <lessonsControls:LessonControlExpanded IsLiveUpdatingEnabled="{Binding $parent[lessonsControls:LessonsListBox].IsLiveUpdatingEnabled}"
                                                       Subjects="{Binding $parent[lessonsControls:LessonsListBox].Subjects}"
                                                       DefaultLessonControlSettings="{Binding $parent[lessonsControls:LessonsListBox].LessonControlSettings, Mode=OneWay}"
                                                       CurrentClassPlan="{Binding $parent[lessonsControls:LessonsListBox].ClassPlan, Mode=OneWay}"
                                                       CurrentTimeLayoutItem="{Binding Mode=OneWay}"
                                                       ClassPlan="{Binding ClassPlan, RelativeSource={RelativeSource AncestorType=lessonsControls:LessonsListBox}, Mode=OneWay}">
                </lessonsControls:LessonControlExpanded>
            </DataTemplate>
            <DataTemplate DataType="{x:Type profile:TimeLayoutItem}"
                          x:Key="{x:Static lessonsControls:LessonsListBox.MinimizedLessonControlResourceKey}">
                <lessonsControls:LessonControlMinimized
                    Subjects="{Binding Subjects, RelativeSource={RelativeSource FindAncestor, AncestorType=lessonsControls:LessonsListBox}}"
                    DefaultLessonControlSettings="{Binding LessonControlSettings, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType=lessonsControls:LessonsListBox}}"
                    ClassPlan="{Binding ClassPlan, RelativeSource={RelativeSource AncestorType=lessonsControls:LessonsListBox}, Mode=OneWay}"
                    CurrentTimeLayoutItem="{Binding Mode=OneWay}">
                </lessonsControls:LessonControlMinimized>
            </DataTemplate>
            
            <lessonsControls:LessonsListBoxItemTemplateMultiConverter
                x:Key="LessonsListBoxItemTemplateMultiConverter"
                SeparatorDataTemplate="{StaticResource {x:Static lessonsControls:LessonsListBox.SeparatorLessonControlResourceKey}}"
                ExpandedDataTemplate="{StaticResource {x:Static lessonsControls:LessonsListBox.ExpandedLessonControlResourceKey}}"
                MinimizedDataTemplate="{StaticResource {x:Static lessonsControls:LessonsListBox.MinimizedLessonControlResourceKey}}"/>
        </ControlTheme.Resources>
        <Setter Property="Height" Value="40"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemsSource" Value="{Binding ClassPlan.TimeLayout.Layouts, RelativeSource={RelativeSource Self}, Mode=OneWay}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type profile:TimeLayoutItem}">
                    <Grid>
                        <ContentPresenter>
                            <ContentPresenter.Content>
                                <Binding/>
                            </ContentPresenter.Content>
                            <ContentPresenter.ContentTemplate>
                                <MultiBinding Converter="{StaticResource LessonsListBoxItemTemplateMultiConverter}"
                                              Mode="OneWay">
                                    <Binding Path="TimeType" Mode="OneWay"/>
                                    <Binding Path="IsHideDefault" Mode="OneWay"/>
                                    <Binding Path="$parent[lessonsControls:LessonsListBox].SelectedItem" RelativeSource="{RelativeSource AncestorType=lessonsControls:LessonsListBox}" Mode="OneWay"/>
                                    <Binding/>
                                    <Binding Path="$parent[lessonsControls:LessonsListBox].DiscardHidingDefault" Mode="OneWay"/>
                                    <Binding Path="$parent[lessonsControls:LessonsListBox].ShowCurrentTimeLayoutItemOnlyOnClass" Mode="OneWay"/>
                                    <Binding Path="$parent[lessonsControls:LessonsListBox].HideFinishedClass" Mode="OneWay"/>
                                    <Binding Path="$parent[lessonsControls:LessonsListBox].ClassPlan.ValidTimeLayoutItems" Mode="OneWay"/>
                                </MultiBinding>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerTheme">
            <Setter.Value>
                <ControlTheme TargetType="ListBoxItem" >
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="MaxHeight" Value="40"/>
                    
                    <!-- 补全选中样式 -->
                    <Style Selector="^:selected">
                        <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                            <Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundSelected}" />
                        </Style>
                        <Style Selector="^ /template/ ContentPresenter">
                            <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelected}" />
                        </Style>
                        <Style Selector="^ /template/ Rectangle#SelectionIndicator">
                            <Setter Property="IsVisible" Value="True" />
                            <Setter Property="RenderTransform" Value="scaleY(1)" />
                        </Style>
                        <Style Selector="^:not(:focus) /template/ ContentPresenter#PART_ContentPresenter">
                            <Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundSelected}" />
                        </Style>
                        <Style Selector="^:not(:focus) /template/ ContentPresenter#PART_ContentPresenter">
                            <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelected}" />
                        </Style>


                        <Style Selector="^:pointerover">
                            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                                <Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedPointerOver}" />
                            </Style>
                            <Style Selector="^ /template/ ContentPresenter">
                                <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelectedPointerOver}" />
                            </Style>
                            <Style Selector="^ /template/ Rectangle#SelectionIndicator">
                                <Setter Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorPointerOverBrush}" />
                            </Style>
                        </Style>

                        <Style Selector="^:pressed">
                            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                                <Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedPressed}" />
                            </Style>
                            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                                <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelectedPressed}" />
                            </Style>
                            <Style Selector="^ /template/ Rectangle#SelectionIndicator">
                                <Setter Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorPressedBrush}" />
                                <!-- TODO: Uncomment when Avalonia fixes selection to work on pointer up -->
                                <!--<Setter Property="RenderTransform" Value="scaleY(0.5)" />-->
                            </Style>
                        </Style>

                        <Style Selector="^:disabled /template/ Rectangle#SelectionIndicator">
                            <Setter Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorDisabledBrush}" />
                        </Style>
                    </Style>
                </ControlTheme>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate TargetType="lessonsControls:LessonsListBox">
                <ItemsPresenter ItemsPanel="{TemplateBinding ItemsPanel}"/>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme TargetType="lessonsControls:LessonsListBox"
                  x:Key="{x:Type lessonsControls:LessonsListBox}"
                  BasedOn="{StaticResource ClassIsland.LessonsListBox}"/>
</ResourceDictionary>
